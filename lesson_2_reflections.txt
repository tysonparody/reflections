
What happens when you initialize a repository?
Why do you need to do it?

The git initialization is what connects your repository to the github and to the functionality of using git as version control.

How is the staging area different from the working directory and the repository?  What value do you think it offers?

The staging area is the space where the files reside as a group so they can all be committed at the same time. Kind of a place for them to be orgainzed. The repository is the collection of all your work on a project. The working directory is the structure for the files.

How can you use the staging area to make sure you have one commit per logical change?

You make the decision to add first before commiting so you are able to orgainze you files.

What are some situations when branches would be helpful in keeping your history orgainized? How would branches help?

Breaking up changes into separate branches creates an appropriate division between ideas so you feel free to experiment.

How do the diagrams help you visulaize the branch structure?

You are able to see the origin of the project and the progress in a visual representation which is useful when you are leering at lines of code for hours.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The two branches become one new master. It's taking all the two branches information and combining them together.

What are the pros and cons of Git's automatic merging vs alwasy doing merges manually?

Automatic merging can help if you forget what changes you make.








